'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ = require('../..');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Effect = function () {
  function Effect(_ref) {
    var characteristic = _ref.characteristic,
        _ref$amount = _ref.amount,
        amount = _ref$amount === undefined ? undefined : _ref$amount;

    _classCallCheck(this, Effect);

    if (!(characteristic instanceof _.Characteristic)) characteristic = new _.Characteristic(characteristic);
    this._characteristic = characteristic;
    if (typeof amount === 'undefined') {
      amount = characteristic.getValue();
    }
    this._amount = amount;
  }

  _createClass(Effect, [{
    key: 'setCharacteristic',
    value: function setCharacteristic(characteristic) {
      if (!(characteristic instanceof _.Characteristic)) characteristic = new _.Characteristic(characteristic);
      this._characteristic = characteristic;
    }
  }, {
    key: 'getCharacteristic',
    value: function getCharacteristic() {
      return this._characteristic;
    }
  }, {
    key: 'setAmount',
    value: function setAmount(amount) {
      this._amount = amount;
    }
  }, {
    key: 'getAmount',
    value: function getAmount() {
      return this._amount;
    }
  }]);

  return Effect;
}();

exports.default = Effect;
module.exports = exports['default'];