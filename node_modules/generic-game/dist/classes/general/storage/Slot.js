'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SlotType = require('./SlotType');

var _SlotType2 = _interopRequireDefault(_SlotType);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Slot = function () {
  function Slot(_ref) {
    var type = _ref.type,
        _ref$capacity = _ref.capacity,
        capacity = _ref$capacity === undefined ? 1 : _ref$capacity;

    _classCallCheck(this, Slot);

    if (!(type instanceof _SlotType2.default) && typeof type === 'string') type = new _SlotType2.default({ name: type });
    if (!(type instanceof _SlotType2.default) && (typeof type === 'undefined' ? 'undefined' : _typeof(type)) === 'object') type = new _SlotType2.default(type);
    this._type = type;
    this._capacity = capacity;
  }

  _createClass(Slot, [{
    key: 'setType',
    value: function setType(type) {
      if (!(type instanceof _SlotType2.default) && typeof type === 'string') type = new _SlotType2.default({ name: type });
      if (!(type instanceof _SlotType2.default) && (typeof type === 'undefined' ? 'undefined' : _typeof(type)) === 'object') type = new _SlotType2.default(type);
      this._type = type;
    }
  }, {
    key: 'getType',
    value: function getType() {
      return this._type;
    }
  }, {
    key: 'setCapacity',
    value: function setCapacity(capacity) {
      this._capacity = capacity;
    }
  }, {
    key: 'getCapacity',
    value: function getCapacity() {
      return this._capacity;
    }
  }]);

  return Slot;
}();

exports.default = Slot;
module.exports = exports['default'];