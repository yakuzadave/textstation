"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Status = function () {
  function Status(_ref) {
    var character = _ref.character;

    _classCallCheck(this, Status);

    this._character = character;
  }

  _createClass(Status, [{
    key: "get",
    value: function get(name) {
      var status = {};
      this._addToStatus(status, this._character.equipment.getModifiers());
      this._addToStatus(status, this._character.characteristics.getCharacteristics());
      this._addToStatus(status, this._character.role.getCharacteristics());
      this._addCurrencies(status);

      status.experience = this._character.experience.getExperience();
      status.level = this._character.experience.computeLevel();

      return name ? status[name] || 0 : status;
    }
  }, {
    key: "_addCurrencies",
    value: function _addCurrencies(status) {
      var currencies = this._character.bank.getCurrencies();
      Object.keys(currencies).forEach(function (key) {
        status[key] = currencies[key].getValue();
      });
    }
  }, {
    key: "_addToStatus",
    value: function _addToStatus(status, characteristics) {
      characteristics.forEach(function (characteristic) {
        if (!characteristic || !characteristic.getName || !characteristic.getValue) return;
        if (status[characteristic.getName()]) {
          status[characteristic.getName()] += characteristic.getValue();
        } else {
          status[characteristic.getName()] = characteristic.getValue();
        }
      });
      return status;
    }
  }]);

  return Status;
}();

exports.default = Status;
module.exports = exports["default"];