'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _quest2 = require('../../quest');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Quests = function () {
  function Quests() {
    _classCallCheck(this, Quests);

    this._quests = [];
  }

  _createClass(Quests, [{
    key: 'getQuests',
    value: function getQuests() {
      return this._quests;
    }
  }, {
    key: 'findQuest',
    value: function findQuest(quest) {
      return this._quests.filter(function (_quest) {
        return quest === _quest;
      })[0] || null;
    }
  }, {
    key: 'addQuest',
    value: function addQuest(quest) {
      if (!(quest instanceof _quest2.Quest)) this._throwNotInstance();
      this._quests.push(quest);
    }
  }, {
    key: 'removeQuest',
    value: function removeQuest(quest) {
      if (!(quest instanceof _quest2.Quest)) this._throwNotInstance();
      if (this._quests.indexOf(quest) === -1) throw new Error('Cannot remove a quest that the character didn\'t join');
      this._quests.splice(this._quests.indexOf(quest), 1);
    }
  }, {
    key: '_throwNotInstance',
    value: function _throwNotInstance() {
      throw new Error('Adding a quest to character, not a quest instance');
    }
  }]);

  return Quests;
}();

exports.default = Quests;
module.exports = exports['default'];