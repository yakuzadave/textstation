'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Characteristics = require('../characteristics/Characteristics');

var _Characteristics2 = _interopRequireDefault(_Characteristics);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Role = function () {
  function Role(_ref) {
    var _ref$name = _ref.name,
        name = _ref$name === undefined ? '' : _ref$name,
        _ref$description = _ref.description,
        description = _ref$description === undefined ? '' : _ref$description,
        _ref$characteristics = _ref.characteristics,
        characteristics = _ref$characteristics === undefined ? [] : _ref$characteristics;

    _classCallCheck(this, Role);

    this._name = name;
    this._description = description;
    this._characteristics = new _Characteristics2.default({ characteristics: characteristics, setDefault: false });
  }

  _createClass(Role, [{
    key: 'setCharacteristics',
    value: function setCharacteristics(characteristics) {
      this._characteristics = new _Characteristics2.default({ characteristics: characteristics, setDefault: false });
    }
  }, {
    key: 'getCharacteristics',
    value: function getCharacteristics() {
      return this._characteristics.getCharacteristics();
    }
  }, {
    key: 'setName',
    value: function setName(name) {
      this._name = name;
    }
  }, {
    key: 'getName',
    value: function getName() {
      return this._name;
    }
  }, {
    key: 'setDescription',
    value: function setDescription(description) {
      this._description = description;
    }
  }, {
    key: 'getDescription',
    value: function getDescription() {
      return this._description;
    }
  }]);

  return Role;
}();

exports.default = Role;
module.exports = exports['default'];