'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ = require('..');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ShopItem = function () {
  function ShopItem(_ref) {
    var item = _ref.item,
        price = _ref.price,
        _ref$quantity = _ref.quantity,
        quantity = _ref$quantity === undefined ? 1 : _ref$quantity;

    _classCallCheck(this, ShopItem);

    if (!(price instanceof _.Currency)) throw new Error('Price must be a Currency instance');
    if (!(item instanceof _.Item)) throw new Error('Item must be a Item instance');
    this._item = item;
    this._price = price;
    this._quantity = quantity;
  }

  _createClass(ShopItem, [{
    key: 'removeUnit',
    value: function removeUnit() {
      return --this._quantity;
    }
  }, {
    key: 'addUnit',
    value: function addUnit() {
      return ++this._quantity;
    }
  }, {
    key: 'setPrice',
    value: function setPrice(price) {
      if (!(price instanceof _.Currency)) throw new Error('Price must be a Currency instance');
      this._price = price;
    }
  }, {
    key: 'getPrice',
    value: function getPrice() {
      return this._price;
    }
  }, {
    key: 'setItem',
    value: function setItem(item) {
      if (!(item instanceof _.Item)) throw new Error('Item must be a Item instance');
      this._item = item;
    }
  }, {
    key: 'getItem',
    value: function getItem() {
      return this._item;
    }
  }, {
    key: 'setQuantity',
    value: function setQuantity(quantity) {
      this._quantity = quantity;
    }
  }, {
    key: 'getQuantity',
    value: function getQuantity() {
      return this._quantity;
    }
  }]);

  return ShopItem;
}();

exports.default = ShopItem;
module.exports = exports['default'];