"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Attack = function () {
  function Attack(_ref) {
    var _ref$damage = _ref.damage,
        damage = _ref$damage === undefined ? 0 : _ref$damage,
        _ref$delay = _ref.delay,
        delay = _ref$delay === undefined ? 0 : _ref$delay,
        _ref$effects = _ref.effects,
        effects = _ref$effects === undefined ? [] : _ref$effects;

    _classCallCheck(this, Attack);

    this._damage = damage;
    this._delay = delay;
    this._effects = effects;
  }

  _createClass(Attack, [{
    key: "setDamage",
    value: function setDamage(damage) {
      this._damage = damage;
    }
  }, {
    key: "getDamage",
    value: function getDamage() {
      return this._damage;
    }
  }, {
    key: "setDelay",
    value: function setDelay(delay) {
      this._delay = delay;
    }
  }, {
    key: "getDelay",
    value: function getDelay() {
      return this._delay;
    }
  }, {
    key: "setEffects",
    value: function setEffects(effects) {
      this._effects = effects;
    }
  }, {
    key: "getEffects",
    value: function getEffects() {
      return this._effects;
    }
  }]);

  return Attack;
}();

exports.default = Attack;
module.exports = exports["default"];